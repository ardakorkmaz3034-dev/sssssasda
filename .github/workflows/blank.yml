name: Multi-Tmate Fixed for MobaXterm

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  create-tmate-sessions:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        session_count: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Install tmate and dependencies
      run: |
        sudo apt update
        sudo apt install -y tmate curl tmux
        
    - name: Generate SSH key for tmate
      run: |
        mkdir -p ~/.ssh
        ssh-keygen -t rsa -b 4096 -f ~/.ssh/tmate_key -N ""
        
    - name: Start tmate with tmux (MobaXterm compatible)
      run: |
        # Use tmux instead of tmate's built-in session management
        tmate -S /tmp/tmate${{ matrix.session_count }}.sock new-session -d -s "session${{ matrix.session_count }}"
        tmate -S /tmp/tmate${{ matrix.session_count }}.sock wait tmate-ready
        
    - name: Get tmate connection info
      run: |
        TMATE_SSH=$(tmate -S /tmp/tmate${{ matrix.session_count }}.sock display -p '#{tmate_ssh}')
        
        # Clean the connection string for MobaXterm
        CLEAN_SSH=$(echo "$TMATE_SSH" | sed 's/^ssh //')
        echo "CLEAN_SSH=$CLEAN_SSH" >> $GITHUB_ENV
        echo "$TMATE_SSH" > /tmp/tmate_full_${{ matrix.session_count }}.txt
        echo "$CLEAN_SSH" > /tmp/tmate_clean_${{ matrix.session_count }}.txt
        
    - name: Send MobaXterm compatible tmate to Discord
      run: |
        TMATE_FULL=$(cat /tmp/tmate_full_${{ matrix.session_count }}.txt)
        TMATE_CLEAN=$(cat /tmp/tmate_clean_${{ matrix.session_count }}.txt)
        
        # Create a simple text file with connection details
        cat > /tmp/tmate_details_${{ matrix.session_count }}.txt << EOF
üéØ TMATE SESSION ${{ matrix.session_count }}

üîó FULL SSH COMMAND:
$TMATE_FULL

üìù CLEAN VERSION (for MobaXterm):
ssh $TMATE_CLEAN

üí° TIP: Copy the CLEAN VERSION and paste directly into MobaXterm SSH terminal
EOF
        
        # Send to Discord
        curl -F "file=@/tmp/tmate_details_${{ matrix.session_count }}.txt" \
        -F "payload_json={\"content\": \"‚úÖ **Tmate Session ${{ matrix.session_count }} Ready**\n\nUse the CLEAN VERSION in MobaXterm"} \
        https://discord.com/api/webhooks/1433727858806624327/WDuONWA8t99ZEaTvhGXVNJ-M3wwm9ehbaJBzy00EYeA1m5u0mg6RJJtnCTmgUzT6l6ZX
      
    - name: Create backup connection method
      run: |
        # Alternative: Use direct SSH tunnel
        tmate -S /tmp/tmate${{ matrix.session_count }}.sock display -p '#{tmate_ssh_ro}' > /tmp/tmate_ro_${{ matrix.session_count }}.txt
        
  web-based-access:
    runs-on: ubuntu-latest
    needs: create-tmate-sessions
    
    steps:
    - name: Get web URL for browser access
      run: |
        for i in {1..10}; do
          if [ -f /tmp/tmate_clean_$i.txt ]; then
            TMATE_WEB=$(tmate -S /tmp/tmate$i.sock display -p '#{tmate_web}') 2>/dev/null || echo "N/A"
          echo "Session $i Web: $TMATE_WEB" >> web_urls.txt
          fi
        done
        
        # Send web URLs to Discord
        curl -H "Content-Type: application/json" \
        -d "{\"content\": \"üåê **Web-Based Access**\\n\\nSome tmate sessions work better via web browser.\\n\\nCheck the uploaded file for web URLs.\"}" \
        https://discord.com/api/webhooks/1433727858806624327/WDuONWA8t99ZEaTvhGXVNJ-M3wwm9ehbaJBzy00EYeA1m5u0mg6RJJtnCTmgUzT6l6ZX
